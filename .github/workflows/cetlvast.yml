name: "Run CETLVaSt suites"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/opencyphal/toolshed:ts22.4.1
    steps:
    - uses: actions/checkout@v3
    - name: verify
      run: |
        ./cetlvast/verify.py -cd ./cetlvast lint
  unittest:
    needs: lint
    runs-on: ubuntu-latest
    container: ghcr.io/opencyphal/toolshed:ts22.4.1
    strategy:
      matrix:
        std: [base, intermediate, target]
        toolchain: [gcc, clang]
    steps:
    - uses: actions/checkout@v3
    - name: setup environment
      run: echo "CETLVASTS_EXT_PATH=$(./cetlvast/verify.py -cd ./cetlvast -lsext none)" >> $GITHUB_ENV
    - name: Cache ext modules
      id: cetlvast-ext
      uses: actions/cache@v3
      env:
        cache-name: cetlvast-ext-cache
      with:
        path: ${{ env.CETLVASTS_EXT_PATH }}
        key: gtest_b796f7d44681514f58a683a3a71ff17c94edb0c1
    - name: verify-gtests
      run: |
        ./cetlvast/verify.py -cd ./cetlvast \
                             --build-flavor Debug \
                             --asserts \
                             --cpp-standard ${{ matrix.std }} \
                             --toolchain ${{ matrix.toolchain }} \
                             unittest
    - name: verify-compiletests
      run: |
        ./cetlvast/verify.py -cd ./cetlvast \
                             --build-flavor Debug \
                             --cpp-standard ${{ matrix.std }} \
                             --toolchain ${{ matrix.toolchain }} \
                             compile

  docs:
    runs-on: ubuntu-latest
    needs: unittest
    container: ghcr.io/opencyphal/toolshed:ts22.4.1
    steps:
    - uses: actions/checkout@v3
    - name: setup environment
      run: |
        echo "CETL_DOCS_PATH=$(./cetlvast/verify.py -cd ./cetlvast -lssd docs)" >> $GITHUB_ENV; \
        echo "CETLVASTS_EXT_PATH=$(./cetlvast/verify.py -cd ./cetlvast -lsext none)" >> $GITHUB_ENV
    - name: Cache ext modules
      id: cetlvast-ext
      uses: actions/cache@v3
      env:
        cache-name: cetlvast-ext-cache
      with:
        path: ${{ env.CETLVASTS_EXT_PATH }}
        key: gtest_b796f7d44681514f58a683a3a71ff17c94edb0c1
    - name: verify
      run: ./cetlvast/verify.py -cd ./cetlvast docs
    - name: Upload docs
      uses: actions/upload-artifact@v3
      with:
        name: github-pages
        path: "${{ env.CETL_DOCS_PATH }}/html.gz"
        if-no-files-found: error
  deploy-docs:
    if: ${{ (github.event_name == 'release' && !github.event.release.prerelease) || github.event_name == 'workflow_dispatch' }}
    needs: docs
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
